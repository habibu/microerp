// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.habibu.model;

import com.habibu.model.CustomerOrder;
import com.habibu.model.OrderDetail;
import com.habibu.model.Product;
import java.math.BigDecimal;
import java.util.Objects;

privileged aspect OrderDetail_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long OrderDetail.getId() {
        return this.id;
    }
    
    /**
     * Sets id value
     * 
     * @param id
     * @return OrderDetail
     */
    public OrderDetail OrderDetail.setId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer OrderDetail.getVersion() {
        return this.version;
    }
    
    /**
     * Sets version value
     * 
     * @param version
     * @return OrderDetail
     */
    public OrderDetail OrderDetail.setVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Gets customerOrder value
     * 
     * @return CustomerOrder
     */
    public CustomerOrder OrderDetail.getCustomerOrder() {
        return this.customerOrder;
    }
    
    /**
     * Sets customerOrder value
     * 
     * @param customerOrder
     * @return OrderDetail
     */
    public OrderDetail OrderDetail.setCustomerOrder(CustomerOrder customerOrder) {
        this.customerOrder = customerOrder;
        return this;
    }
    
    /**
     * Gets product value
     * 
     * @return Product
     */
    public Product OrderDetail.getProduct() {
        return this.product;
    }
    
    /**
     * Sets product value
     * 
     * @param product
     * @return OrderDetail
     */
    public OrderDetail OrderDetail.setProduct(Product product) {
        this.product = product;
        return this;
    }
    
    /**
     * Gets unitPrice value
     * 
     * @return BigDecimal
     */
    public BigDecimal OrderDetail.getUnitPrice() {
        return this.unitPrice;
    }
    
    /**
     * Sets unitPrice value
     * 
     * @param unitPrice
     * @return OrderDetail
     */
    public OrderDetail OrderDetail.setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    /**
     * Gets quantity value
     * 
     * @return Integer
     */
    public Integer OrderDetail.getQuantity() {
        return this.quantity;
    }
    
    /**
     * Sets quantity value
     * 
     * @param quantity
     * @return OrderDetail
     */
    public OrderDetail OrderDetail.setQuantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Gets discount value
     * 
     * @return BigDecimal
     */
    public BigDecimal OrderDetail.getDiscount() {
        return this.discount;
    }
    
    /**
     * Sets discount value
     * 
     * @param discount
     * @return OrderDetail
     */
    public OrderDetail OrderDetail.setDiscount(BigDecimal discount) {
        this.discount = discount;
        return this;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean OrderDetail.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof OrderDetail)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((OrderDetail) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int OrderDetail.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String OrderDetail.toString() {
        return "OrderDetail {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", unitPrice='" + unitPrice + '\'' + 
                ", quantity='" + quantity + '\'' + 
                ", discount='" + discount + '\'' + "}" + super.toString();
    }
    
}
