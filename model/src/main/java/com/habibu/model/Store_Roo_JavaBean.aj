// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.habibu.model;

import com.habibu.model.City;
import com.habibu.model.Country;
import com.habibu.model.Region;
import com.habibu.model.Store;
import com.habibu.model.Supplier;
import java.util.Objects;
import java.util.Set;

privileged aspect Store_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long Store.getId() {
        return this.id;
    }
    
    /**
     * Sets id value
     * 
     * @param id
     * @return Store
     */
    public Store Store.setId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer Store.getVersion() {
        return this.version;
    }
    
    /**
     * Sets version value
     * 
     * @param version
     * @return Store
     */
    public Store Store.setVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Gets city value
     * 
     * @return City
     */
    public City Store.getCity() {
        return this.city;
    }
    
    /**
     * Sets city value
     * 
     * @param city
     * @return Store
     */
    public Store Store.setCity(City city) {
        this.city = city;
        return this;
    }
    
    /**
     * Gets country value
     * 
     * @return Country
     */
    public Country Store.getCountry() {
        return this.country;
    }
    
    /**
     * Sets country value
     * 
     * @param country
     * @return Store
     */
    public Store Store.setCountry(Country country) {
        this.country = country;
        return this;
    }
    
    /**
     * Gets region value
     * 
     * @return Region
     */
    public Region Store.getRegion() {
        return this.region;
    }
    
    /**
     * Sets region value
     * 
     * @param region
     * @return Store
     */
    public Store Store.setRegion(Region region) {
        this.region = region;
        return this;
    }
    
    /**
     * Gets name value
     * 
     * @return String
     */
    public String Store.getName() {
        return this.name;
    }
    
    /**
     * Sets name value
     * 
     * @param name
     * @return Store
     */
    public Store Store.setName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Gets address value
     * 
     * @return String
     */
    public String Store.getAddress() {
        return this.address;
    }
    
    /**
     * Sets address value
     * 
     * @param address
     * @return Store
     */
    public Store Store.setAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * Gets postalCode value
     * 
     * @return String
     */
    public String Store.getPostalCode() {
        return this.postalCode;
    }
    
    /**
     * Sets postalCode value
     * 
     * @param postalCode
     * @return Store
     */
    public Store Store.setPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * Gets phone value
     * 
     * @return String
     */
    public String Store.getPhone() {
        return this.phone;
    }
    
    /**
     * Sets phone value
     * 
     * @param phone
     * @return Store
     */
    public Store Store.setPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    /**
     * Gets suppliers value
     * 
     * @return Set
     */
    public Set<Supplier> Store.getSuppliers() {
        return this.suppliers;
    }
    
    /**
     * Sets suppliers value
     * 
     * @param suppliers
     * @return Store
     */
    public Store Store.setSuppliers(Set<Supplier> suppliers) {
        this.suppliers = suppliers;
        return this;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean Store.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof Store)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((Store) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int Store.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String Store.toString() {
        return "Store {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", name='" + name + '\'' + 
                ", address='" + address + '\'' + 
                ", postalCode='" + postalCode + '\'' + 
                ", phone='" + phone + '\'' + "}" + super.toString();
    }
    
}
